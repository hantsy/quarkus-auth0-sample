# Configure your datasource
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=user
quarkus.datasource.password=password
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/blogdb
quarkus.datasource.jdbc.max-size=16

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.hibernate-orm.log.sql=true

# Oidc auth config for resource server
quarkus.oidc.client-id=backend-api
quarkus.oidc.auth-server-url=https://dev-ese8241b.us.auth0.com/
quarkus.oidc.token.audience=https://hantsy.github.io/api
#quarkus.oidc.application-type=service
# smallrye.jwt.sign.key-location=privateKey.pem
# Enable Cors
quarkus.http.cors=true

# Oidc Configuration for test
#%test.quarkus.oidc.auth-server-url=${keycloak.url}/realms/quarkus/
#%test.quarkus.oidc.client-id=quarkus-service-app
#%test.quarkus.oidc.credentials.secret=secret
#%test.quarkus.oidc.token.principal-claim=email
#%test.quarkus.oidc.tls.verification=none

# RoleClaimPath to read scope instead of roles
#quarkus.oidc.roles.roleClaimPath=scope

# Enable HTTP basic auth
#%test.quarkus.http.auth.basic=true

# Enable embedded users properties
#%test.quarkus.security.users.embedded.enabled=true
#%test.quarkus.security.users.embedded.plain-text=true
#%test.quarkus.security.users.embedded.users.alice=password
#%test.quarkus.security.users.embedded.roles.alice=user

# Logging
quarkus.log.category."io.quarkus.oidc".level=TRACE